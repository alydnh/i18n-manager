// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetQueryLanguageStatusHandlerFunc turns a function with the right signature into a get query language status handler
type GetQueryLanguageStatusHandlerFunc func(GetQueryLanguageStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetQueryLanguageStatusHandlerFunc) Handle(params GetQueryLanguageStatusParams) middleware.Responder {
	return fn(params)
}

// GetQueryLanguageStatusHandler interface for that can handle valid get query language status params
type GetQueryLanguageStatusHandler interface {
	Handle(GetQueryLanguageStatusParams) middleware.Responder
}

// NewGetQueryLanguageStatus creates a new http.Handler for the get query language status operation
func NewGetQueryLanguageStatus(ctx *middleware.Context, handler GetQueryLanguageStatusHandler) *GetQueryLanguageStatus {
	return &GetQueryLanguageStatus{Context: ctx, Handler: handler}
}

/*GetQueryLanguageStatus swagger:route GET /query/{language}/{status} Query getQueryLanguageStatus

下载语言列表

*/
type GetQueryLanguageStatus struct {
	Context *middleware.Context
	Handler GetQueryLanguageStatusHandler
}

func (o *GetQueryLanguageStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetQueryLanguageStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
