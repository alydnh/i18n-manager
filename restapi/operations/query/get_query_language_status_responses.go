// Code generated by go-swagger; DO NOT EDIT.

package query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "i18n-manager/models"
)

// GetQueryLanguageStatusOKCode is the HTTP code returned for type GetQueryLanguageStatusOK
const GetQueryLanguageStatusOKCode int = 200

/*GetQueryLanguageStatusOK OK

swagger:response getQueryLanguageStatusOK
*/
type GetQueryLanguageStatusOK struct {

	/*
	  In: Body
	*/
	Payload []*models.LanguageAPIModel `json:"body,omitempty"`
}

// NewGetQueryLanguageStatusOK creates GetQueryLanguageStatusOK with default headers values
func NewGetQueryLanguageStatusOK() *GetQueryLanguageStatusOK {

	return &GetQueryLanguageStatusOK{}
}

// WithPayload adds the payload to the get query language status o k response
func (o *GetQueryLanguageStatusOK) WithPayload(payload []*models.LanguageAPIModel) *GetQueryLanguageStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get query language status o k response
func (o *GetQueryLanguageStatusOK) SetPayload(payload []*models.LanguageAPIModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueryLanguageStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.LanguageAPIModel, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetQueryLanguageStatusBadRequestCode is the HTTP code returned for type GetQueryLanguageStatusBadRequest
const GetQueryLanguageStatusBadRequestCode int = 400

/*GetQueryLanguageStatusBadRequest Fail

swagger:response getQueryLanguageStatusBadRequest
*/
type GetQueryLanguageStatusBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetQueryLanguageStatusBadRequest creates GetQueryLanguageStatusBadRequest with default headers values
func NewGetQueryLanguageStatusBadRequest() *GetQueryLanguageStatusBadRequest {

	return &GetQueryLanguageStatusBadRequest{}
}

// WithPayload adds the payload to the get query language status bad request response
func (o *GetQueryLanguageStatusBadRequest) WithPayload(payload string) *GetQueryLanguageStatusBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get query language status bad request response
func (o *GetQueryLanguageStatusBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueryLanguageStatusBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
