// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SaveOrUpdateKeyOKCode is the HTTP code returned for type SaveOrUpdateKeyOK
const SaveOrUpdateKeyOKCode int = 200

/*SaveOrUpdateKeyOK OK

swagger:response saveOrUpdateKeyOK
*/
type SaveOrUpdateKeyOK struct {
}

// NewSaveOrUpdateKeyOK creates SaveOrUpdateKeyOK with default headers values
func NewSaveOrUpdateKeyOK() *SaveOrUpdateKeyOK {

	return &SaveOrUpdateKeyOK{}
}

// WriteResponse to the client
func (o *SaveOrUpdateKeyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SaveOrUpdateKeyBadRequestCode is the HTTP code returned for type SaveOrUpdateKeyBadRequest
const SaveOrUpdateKeyBadRequestCode int = 400

/*SaveOrUpdateKeyBadRequest Fail

swagger:response saveOrUpdateKeyBadRequest
*/
type SaveOrUpdateKeyBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewSaveOrUpdateKeyBadRequest creates SaveOrUpdateKeyBadRequest with default headers values
func NewSaveOrUpdateKeyBadRequest() *SaveOrUpdateKeyBadRequest {

	return &SaveOrUpdateKeyBadRequest{}
}

// WithPayload adds the payload to the save or update key bad request response
func (o *SaveOrUpdateKeyBadRequest) WithPayload(payload string) *SaveOrUpdateKeyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save or update key bad request response
func (o *SaveOrUpdateKeyBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveOrUpdateKeyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
