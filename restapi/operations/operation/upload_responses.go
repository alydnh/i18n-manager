// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UploadOKCode is the HTTP code returned for type UploadOK
const UploadOKCode int = 200

/*UploadOK OK

swagger:response uploadOK
*/
type UploadOK struct {
}

// NewUploadOK creates UploadOK with default headers values
func NewUploadOK() *UploadOK {

	return &UploadOK{}
}

// WriteResponse to the client
func (o *UploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UploadBadRequestCode is the HTTP code returned for type UploadBadRequest
const UploadBadRequestCode int = 400

/*UploadBadRequest Fail

swagger:response uploadBadRequest
*/
type UploadBadRequest struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewUploadBadRequest creates UploadBadRequest with default headers values
func NewUploadBadRequest() *UploadBadRequest {

	return &UploadBadRequest{}
}

// WithPayload adds the payload to the upload bad request response
func (o *UploadBadRequest) WithPayload(payload string) *UploadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload bad request response
func (o *UploadBadRequest) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
